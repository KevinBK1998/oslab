alias functionNum R1;
alias currentPID R2;
if (functionNum == TERMINAL_WRITE) then
    alias word R3;
    multipush(R1,R2,R3);
    R1=ACQUIRE_TERMINAL;
    R2=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER;
    multipop(R1,R2,R3);
    print word;
    multipush(R1,R2,R3);
    R1=RELEASE_TERMINAL;
    R2=[SYSTEM_STATUS_TABLE+1];
    call RESOURCE_MANAGER;
    multipop(R1,R2,R3);
    return;
else
    if (functionNum == TERMINAL_READ) then
        alias address R3;
        multipush(R1,R2,R3);
        R1=ACQUIRE_TERMINAL;
        R2=[SYSTEM_STATUS_TABLE+1];
        call RESOURCE_MANAGER;
        multipop(R1,R2,R3);
        read;
        [PROCESS_TABLE+16*currentPID+4]=WAIT_TERMINAL;
        multipush(R1,R2,R3);
        call SCHEDULER;
        multipop(R1,R2,R3);
        address = [PAGE_TABLE_BASE+20 * currentPID +2* address/512] + address % 512;
        [address]=[PROCESS_TABLE+16*currentPID+8];
        return;
    else
        return;
    endif;
endif;