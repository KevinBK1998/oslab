//load library
loadi(63,13);
loadi(64,14);
// load init
loadi(65,7);
loadi(66,8);
//load idle
loadi(69,11);
loadi(70,12);
//load int10
loadi(22,35);
loadi(23,36);
//load timer
loadi(4,17);
loadi(5,18);
//load exhandler
loadi(2,15);
loadi(3,16);
//load int7
loadi(16,29);
loadi(17,30);
//setup page table for pid 0
PTBR = PAGE_TABLE_BASE;
PTLR = 10;
//2 LIBRARY PAGES
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";
//2 HEAP PAGES
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";
//4 CODE PAGES
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
//2 STACK PAGES
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";
//setup page table for pid 1
PTBR = PAGE_TABLE_BASE + 20;
//2 LIBRARY PAGES
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";
//2 HEAP PAGES
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";
//4 CODE PAGES
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";
//2 STACK PAGES
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
//Set top of stack to start of header
[76*512] = [65*512+1];
[81*512] = [69*512+1];
//Set SP to start of page 9
SP = 8*512;
//Set up process table for pid 0
[PROCESS_TABLE+1]=0;
[PROCESS_TABLE+4]=CREATED;
[PROCESS_TABLE+11]=82;
[PROCESS_TABLE+12]=0;
[PROCESS_TABLE+13]=8*512;
[PROCESS_TABLE+14]=PAGE_TABLE_BASE;
[PROCESS_TABLE+15]=10;
//Set up process table for pid 1
[PROCESS_TABLE+16*1+1]=1;
[PROCESS_TABLE+16*1+4]=RUNNING;
[PROCESS_TABLE+16*1+11]=80;
[PROCESS_TABLE+16*1+12]=0;
[PROCESS_TABLE+16*1+13]=8*512;
[PROCESS_TABLE+16*1+14]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16*1+15]=10;
//current pid is 0
[SYSTEM_STATUS_TABLE + 1] = 1;
ireturn;